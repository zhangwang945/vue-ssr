#!/usr/bin/env node

var program = require('commander')
var fs = require('fs')
var path = require('path')
var { exec } = require('child_process')
var startup = require('../webpack/startup')

function startDebug() {
    const arg = process.argv.slice(2).filter(i => i !== '--debug').join(' ')
    exec(`node --inspect-brk ${path.resolve('webpack/debug.js')} ${arg}`, function(err, b, c) {
        if (err) console.log(err)
        console.log(b)
    })
}

program.version('v1.0.0')
// 创建项目
program
    .command('create <appName>')
    .description('create project ')
    .action(function(appName, cmd) {
        require('../create')(appName, cmd)
    })
// 开启dev服务
program
    .command('start')
    .description('创建dev服务')
    .option('-p, --port <port>', 'Port used by the server (default: 3000)')
    .option('--debug', 'debugging')
    .action(function(cmd) {
        if (cmd.debug) {
            startDebug()
        } else {
            startup('start', { port: cmd.port })
        }
    })
// build构建
program
    .command('build')
    .description('构建')
    .option(' --profile', 'generate stats.json')
    .option('--debug', 'debugging')
    .option('--client', 'build ssr client')
    .option('--server', 'build ssr server')
    .action(function(cmd) {
        if (cmd.debug) {
            startDebug()
        } else {
            startup('build', { profile: cmd.profile, client: cmd.client, server: cmd.server })
        }
    })
program
    .command('dll')
    .description('生成dll')
    .action(function(cmd) {
        startup('dll', {})
    })
program.parse(process.argv);